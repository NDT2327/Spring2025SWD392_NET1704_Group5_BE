<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CCSystem.API</name>
    </assembly>
    <members>
        <member name="T:CCSystem.API.Constants.APIEndPointConstant.ServiceDetail">
            <summary>
            Endpoint for managing service details.
            </summary>
            
        </member>
        <member name="T:CCSystem.API.Constants.APIEndPointConstant.Promotions">
            <summary>
            Endpoint for managing Promotions.
            </summary>
            
        </member>
        <!-- Badly formed XML comment ignored for member "M:CCSystem.API.Controllers.AccountsController.SearchAccountsAsync(CCSystem.Infrastructure.DTOs.Accounts.AccountSearchRequest)" -->
        <member name="M:CCSystem.API.Controllers.AccountsController.LockAccount(CCSystem.Infrastructure.DTOs.Accounts.AccountIdRequest)">
            <summary>
            Lock an account by accountId
            </summary>
            <param name="accountId">Account ID to lock</param>
            <returns>Success message if locked</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.AccountsController.UnlockAccount(CCSystem.Infrastructure.DTOs.Accounts.AccountIdRequest)">
            <summary>
            Unlock an account by accountId
            </summary>
            <param name="accountId">Account ID to unlock</param>
            <returns>Success message if unlocked</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CCSystem.API.Controllers.AccountsController.GetAccountProfile(CCSystem.Infrastructure.DTOs.Accounts.AccountIdRequest)" -->
        <!-- Badly formed XML comment ignored for member "M:CCSystem.API.Controllers.AccountsController.GetAccounts(CCSystem.Infrastructure.DTOs.Accounts.AccountsListRequest)" -->
        <!-- Badly formed XML comment ignored for member "M:CCSystem.API.Controllers.AccountsController.UpdateAccount(System.Int32,CCSystem.Infrastructure.DTOs.Accounts.UpdateAccountRequest)" -->
        <member name="M:CCSystem.API.Controllers.AssignsController.GetListAsync">
            <summary>
             Get list of Assign
             </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.AssignsController.GetById(CCSystem.Infrastructure.DTOs.ScheduleAssign.AssignIdRequest)">
            <summary>
             Get Assign By Id
             </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.AssignsController.PostAssignHousekeeper(CCSystem.Infrastructure.DTOs.ScheduleAssign.PostScheduleAssignRequest)">
            <summary>
            Assign housekeeper in work
             </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.AssignsController.GetAssignsByHousekeeper(CCSystem.Infrastructure.DTOs.Accounts.AccountIdRequest)">
            <summary>
            Retrieves schedule assignments for a given housekeeper.
            </summary>
            <param name="housekeeperId">The ID of the housekeeper.</param>
            <returns>A list of schedule assignments.</returns>
            <response code="200">Returns the list of assignments.</response>
            <response code="404">If the housekeeper does not exist.</response>
            <response code="500">If there is an internal server error.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.AssignsController.ChangeAssignStatus(CCSystem.Infrastructure.DTOs.ScheduleAssign.PatchAssignStatusRequest)">
            <summary>
            Updates the status of an assignment.
            </summary>
            <param name="request">The request object containing the assignment ID and new status.</param>
            <returns>A success message if the status is updated.</returns>
            <response code="200">Assignment status updated successfully.</response>
            <response code="400">If the status value is invalid.</response>
            <response code="404">If the assignment does not exist.</response>
            <response code="500">If an internal server error occurs.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.AssignsController.CompleteAssignmentAndNotifyCustomer(CCSystem.Infrastructure.DTOs.ScheduleAssign.CompleteAssignmentRequest)">
            <summary>
            Completes an assignment and notifies the customer via email.
            </summary>
            <param name="request">The request object containing assignment and housekeeper information.</param>
            <returns>A success message if the operation is completed successfully.</returns>
            <response code="200">Assignment completed and customer notified successfully.</response>
            <response code="400">If the assignment does not belong to the specified housekeeper.</response>
            <response code="404">If the assignment or booking detail is not found.</response>
            <response code="500">If an internal server error occurs.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.AssignsController.ConfirmAssignment(CCSystem.Infrastructure.DTOs.ScheduleAssign.ConfirmAssignmentRequest)">
            <summary>
            Confirms the completion of an assignment by the customer.
            </summary>
            <param name="request">The request object containing the assignment ID and customer confirmation.</param>
            <returns>A success message if the assignment is confirmed successfully.</returns>
            <response code="200">Assignment confirmed successfully.</response>
            <response code="400">If the assignment cannot be confirmed.</response>
            <response code="404">If the assignment does not exist.</response>
            <response code="500">If an internal server error occurs.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.AssignsController.RequestCancel(CCSystem.Infrastructure.DTOs.ScheduleAssign.CancelAssignmentRequest)">
            <summary>
            Allows a housekeeper to request cancellation of an assignment.
            </summary>
            <param name="request">The request object containing assignment details.</param>
            <returns>A success message if the request is submitted successfully.</returns>
            <response code="200">Cancellation request submitted successfully.</response>
            <response code="400">If the request data is invalid.</response>
            <response code="500">If an internal server error occurs.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.AssignsController.GetCancelRequests">
            <summary>
            Retrieves all cancellation requests made by housekeepers.
            </summary>
            <returns>A list of cancellation requests.</returns>
            <response code="200">Returns the list of cancellation requests.</response>
            <response code="500">If an internal server error occurs.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.AssignsController.ConfirmCancel(CCSystem.Infrastructure.DTOs.ScheduleAssign.ConfirmCancelAssignmentRequest)">
            <summary>
            Confirms and processes a housekeeper's cancellation request.
            </summary>
            <param name="request">The request object containing cancellation details.</param>
            <returns>A success message if the cancellation is processed successfully.</returns>
            <response code="200">Cancellation request processed successfully.</response>
            <response code="400">If the request data is invalid.</response>
            <response code="500">If an internal server error occurs.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.AuthenticationsController.PostRegisterAsync(CCSystem.Infrastructure.DTOs.Accounts.AccountRegisterRequest)">
            <summary>
            Register a new account into the system.
            </summary>
            <param name="account">
            Account object contains Email and Password properties.
            Notice that the password must be hashed with MD5 algorithm before sending to Register API.
            
            </param>
            <returns>
            An object with a JSON format that contains Account Id, Email, Role name, and a pair token (access token, refresh token).
            </returns>
            <remarks>
            Sample request:
            
                POST
                {
                    "email": "abc@gmail.com",
                    "password": "********"
                }
            </remarks>
            <response code="200">Register Successfully.</response>
            <response code="400">Some Error about request data and logic data.</response>
            <response code="404">Some Error about request data not found.</response>
            <response code="500">Some Error about the system.</response>
            <exception cref="T:CCSystem.BLL.Exceptions.BadRequestException">Throw Error about request data and logic business.</exception>
            <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Throw Error about request data that are not found.</exception>
            <exception cref="T:System.Exception">Throw Error about the system.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.AuthenticationsController.PostLoginAsync(CCSystem.Infrastructure.DTOs.Accounts.AccountLoginRequest)">
             <summary>
             Login to access into the system by your account.
             </summary>
             <param name="account">
             Account object contains Email property and Password property. 
             Notice that the password must be hashed with MD5 algorithm before sending to Login API.
             </param>
             <returns>
             An Object with a json format that contains Account Id, Email, Role name, and a pair token (access token, refresh token).
             </returns>
             <remarks>
                 Sample request:
            
                     POST 
                     {
                         "email": "abc@gmail.com"
                         "password": "********"
                     }
             </remarks>
             <response code="200">Login Successfully.</response>
             <response code="400">Some Error about request data and logic data.</response>
             <response code="404">Some Error about request data not found.</response>
             <response code="500">Some Error about the system.</response>
             <exception cref="T:CCSystem.BLL.Exceptions.BadRequestException">Throw Error about request data and logic bussiness.</exception>
             <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Throw Error about request data that are not found.</exception>
             <exception cref="T:System.Exception">Throw Error about the system.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.AuthenticationsController.PostVerifyEmail(CCSystem.Infrastructure.DTOs.Accounts.EmailVerificationRequest)">
             <summary>
             Verify email before resetting password.
             </summary>
             <param name="emailVerificationRequest">
             EmailVerificationRequest object contains Email property.
             </param>
             <returns>
             A success message about the sentting OTP code to Email.
             </returns>
             <remarks>
                 Sample request:
            
                     POST 
                     {
                         "email": "abc@gmail.com"
                     }
             </remarks>
             <response code="200">Sent OTP Code to Email Successfully.</response>
             <response code="404">Some Error about request data that are not found.</response>
             <response code="500">Some Error about the system.</response>
             <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Throw Error about request data that are not found.</exception>
             <exception cref="T:System.Exception">Throw Error about the system.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.AuthenticationsController.PostConfirmOTPCode(CCSystem.Infrastructure.DTOs.Accounts.OTPCodeVerificationRequest)">
             <summary>
             Compare sent OTP Code in the system with receiver's OTP Code. 
             </summary>
             <param name="otpCodeVerificationRequest">
             OTPCodeVerificationRequest object contains Email property and OTPCode property.
             </param>
             <returns>
             A success message when the OTP Code in the system matchs to receiver's OTP Code.
             </returns>
             <remarks>
                 Sample request:
            
                     POST 
                     {
                         "email": "abc@gmail.com",
                         "otpCode": "000000"
                     }
             </remarks>
             <response code="200">Sent OTP Code to Email Successfully.</response>
             <response code="400">Some Error about request data and logic data.</response>
             <response code="404">Some Error about request data that are not found.</response>
             <response code="500">Some Error about the system.</response>
             <exception cref="T:CCSystem.BLL.Exceptions.BadRequestException">Throw Error about request data and logic bussiness.</exception>
             <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Throw Error about request data that are not found.</exception>
             <exception cref="T:System.Exception">Throw Error about the system.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.AuthenticationsController.PutResetPasswordAsync(CCSystem.Infrastructure.DTOs.Accounts.ResetPasswordRequest)">
             <summary>
             A new password will be updated after the email is verified before.
             </summary>
             <param name="resetPassword">
             ResetPassword object contains Email property and new password property.
             Notice that the new password must be hashed with MD5 algorithm before sending to Login API.
             </param>
             <returns>
             A success message about the resetring password procedure.
             </returns>
             <remarks>
                 Sample request:
            
                     PUT
                     {
                         "email": "abc@gmail.com"
                         "newPassword": "********"
                     }
             </remarks>
             <response code="200">A success message about the resetring password procedure.</response>
             <response code="400">Some Error about request data and logic data.</response>
             <response code="500">Some Error about the system.</response>
             <exception cref="T:CCSystem.BLL.Exceptions.BadRequestException">Throw Error about request data and logic bussiness.</exception>
             <exception cref="T:System.Exception">Throw Error about the system.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.AuthenticationsController.PostReGenerateTokensAsync(CCSystem.Infrastructure.DTOs.AccountTokens.AccountTokenRequest)">
             <summary>
             Re-generate pair token from the old pair token that are provided by the MBKC system before.
             </summary>
             <param name="accountToken">
             AccountToken Object contains access token property and refresh token property.
             </param>
             <returns>
             The new pair token (Access token, Refresh token) to continue access into the MBKC system.
             </returns>
             <remarks>
                 Sample request:
            
                     POST 
                     {
                         "accessToken": "abcxyz"
                         "refreshToken": "klmnopq"
                     }
             </remarks>
             <response code="200">Re-Generate Token Successfully.</response>
             <response code="404">Some Error about request data that are not found.</response>
             <response code="400">Some Error about request data and logic data.</response>
             <response code="500">Some Error about the system.</response>
             <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Throw Error about request data that are not found.</exception>
             <exception cref="T:CCSystem.BLL.Exceptions.BadRequestException">Throw Error about request data and logic bussiness.</exception>
             <exception cref="T:System.Exception">Throw Error about the system.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingDetailsController.GetBookingDetailByIdAsync(CCSystem.Infrastructure.DTOs.BookingDetails.BookingDetailIdRequest)">
            <summary>
            Retrieves detailed information of a booking detail by its Id.
            </summary>
            <param name="id">The Id of the booking detail to retrieve.</param>
            <returns>
            Detailed information of the booking detail.
            </returns>
            <response code="200">Booking detail information retrieved successfully.</response>
            <response code="404">No booking detail found with the provided Id.</response>
            <response code="500">An error occurred in the system.</response>
            <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Thrown when no booking detail exists with the provided Id.</exception>
            <exception cref="T:System.Exception">Throws a system exception if an error occurs.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingDetailsController.GetBookingDetailByBookingId(CCSystem.Infrastructure.DTOs.Bookings.BookingIdRequest)">
            <summary>
            Get detailed information from a booking Id.
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingDetailsController.GetActiveBookingDetail">
            <summary>
            Get Active booking detail information.
            </summary>
            <returns>
            List of active booking details.
            </returns>
            <response code="200">Active booking details retrieved successfully.</response>
            <response code="404">No active booking details found.</response>
            <response code="500">An error occurred in the system.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingDetailsController.GetBookingDetailsByServiceId(System.Int32)">
            <summary>
            Get list of BookingDetails by ServicelId
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingDetailsController.GetBookingDetailsByServiceDetailId(System.Int32)">
            <summary>
            Get list of BookingDetails by ServiceDetailId
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingDetailsController.GetAllBookingDetail">
            <summary>
            API lấy danh sách tất cả các chi tiết đặt lịch (BookingDetail).
            </summary>
            <returns>Danh sách BookingDetail dưới dạng HTTP 200 OK.</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingDetailsController.RescheduleBookingDetail(System.Int32,CCSystem.Infrastructure.DTOs.BookingDetails.RescheduleRequest)">
            <summary>
            Reschedule Booking Detail appointment.
            </summary>
            <param name="id">ID của Booking Detail.</param>
            <param name="request">Yêu cầu đặt lại lịch.</param>
            <returns>Trả về thông tin đặt lại lịch.</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingDetailsController.ConfirmReschedule(System.Int32,CCSystem.Infrastructure.DTOs.BookingDetails.ConfirmRescheduleRequest)">
            <summary>
            Confirm rescheduling.
            </summary>
            <param name="id">ID của Booking Detail.</param>
            <param name="request">Yêu cầu xác nhận đặt lại lịch.</param>
            <returns>Trả về trạng thái xác nhận.</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingsController.CreateBookingWithDetailsAsync(CCSystem.Infrastructure.DTOs.Bookings.PostBookingRequest)">
            <summary>
            Create a booking along with its booking details.
            </summary>
            <param name="postBookingRequest">An object containing booking information and its associated details.</param>
            <returns>A status response indicating the creation status of the booking.</returns>
            <remarks>
            Sample request:
            
                POST
                {
                    "customerId": 123,
                    "promotionCode": "PROMO2021",
                    "notes": "Booking note",
                    "paymentMethod": "CreditCard",
                    "address": "123 Street",
                    "bookingDetails": [
                        {
                            "serviceId": 1,
                            "quantity": 2,
                            "scheduleDate": "2025-03-02",
                            "scheduleTime": "14:00:00",
                            "serviceDetailId": 10
                        }
                    ]
                }
            </remarks>
            <response code="200">Booking created successfully.</response>
            <response code="400">Bad request due to invalid data.</response>
            <response code="404">Not found error if customer or booking detail not found.</response>
            <response code="500">Internal server error.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingsController.GetBookingByIdAsync(CCSystem.Infrastructure.DTOs.Bookings.BookingIdRequest)">
            <summary>
            Retrieves detailed information of a booking by its Id.
            </summary>
            <param name="id">The Id of the booking to retrieve.</param>
            <returns>
            Detailed information of the booking.
            </returns>
            <response code="200">Booking information retrieved successfully.</response>
            <response code="404">No booking found with the provided Id.</response>
            <response code="500">An error occurred in the system.</response>
            <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Thrown when no booking exists with the provided Id.</exception>
            <exception cref="T:System.Exception">Throws a system exception if an error occurs.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingsController.GetBookingsByCustomer(CCSystem.Infrastructure.DTOs.Accounts.AccountIdRequest)">
            <summary>
            Get Bookings by Customer Id
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingsController.GetAllBooking">
            <summary>
            API lấy danh sách tất cả các bookings.
            </summary>
            <returns>Danh sách bookings dưới dạng HTTP 200 OK.</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingsController.GetByPromotionCode(System.String)">
            <summary>
            Lấy thông tin đơn đặt chỗ theo mã khuyến mãi (PromotionCode).
            </summary>
            <param name="promotionCode">Mã khuyến mãi</param>
            <returns>Thông tin đơn đặt chỗ</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingsController.RequestCancelBooking(System.Int32,System.Int32)">
            <summary>
            Customer requests to cancel Booking
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingsController.ProcessRefundBooking(System.Int32,System.Int32)">
            <summary>
            Staff processes refunds and confirms cancellations
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.BookingsController.GetCancelRequestedBookings">
            <summary>
            Retrieves a list of bookings that are in cancellation requested status.
            </summary>
            <returns>A list of cancellation requested bookings.</returns>
            <response code="200">Cancellation requested bookings returned successfully.</response>
            <response code="404">No cancellation requested bookings found.</response>
            <response code="500">If an internal server error occurs.</response>
        </member>
        <member name="T:CCSystem.API.Controllers.CategoryController">
            <summary>
            Controller for managing categories.
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.CategoryController.#ctor(CCSystem.BLL.Services.Interfaces.ICategoryService)">
            <summary>
            Constructor để inject service quản lý danh mục.
            </summary>
            <param name="categoryService">Service xử lý danh mục</param>
        </member>
        <member name="M:CCSystem.API.Controllers.CategoryController.GetAllCategories">
            <summary>
            Get all categories.
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.CategoryController.GetCategoryById(System.Int32)">
            <summary>
            Get category by ID.
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.CategoryController.CreateCategory(CCSystem.Infrastructure.DTOs.Category.CategoryRequest)">
            <summary>
            Create a new category.
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.CategoryController.UpdateCategory(System.Int32,CCSystem.Infrastructure.DTOs.Category.CategoryRequest)">
            <summary>
            Update a category.
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.CategoryController.DeleteCategory(System.Int32)">
            <summary>
            Delete a category
            </summary>
            <param name="id">Category Id</param>
            <returns>No content</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.CategoryController.GetSearchCategoryAsync(CCSystem.Infrastructure.DTOs.Category.SearchCategoryRequest)">
            <summary>
            Search categories
            </summary>
            <returns>List of categories</returns>
            <response code="200">Return a list of services matching the criteria.</response>
            <response code="400">Invalid search criteria or business logic error.</response>
            <response code="500">Unexpected system error.</response>
            <exception cref="T:CCSystem.BLL.Exceptions.BadRequestException">Throw error if search criteria are invalid.</exception>
            <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Throw error if related data are not found.</exception>
            <exception cref="T:System.Exception">Throw error for unexpected system issues.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.PaymentController.CreatePaymentUrl(CCSystem.Infrastructure.DTOs.Payments.CreatePaymentRequest)">
            <summary>
            Tạo url thanh toán
            </summary>
            <param name="money">Số tiền phải thanh toán</param>
            <param name="description">Mô tả giao dịch</param>
            <returns></returns>
        </member>
        <member name="M:CCSystem.API.Controllers.PaymentController.IpnAction">
            <summary>
            Thực hiện hành động sau khi thanh toán. URL này cần được khai báo với VNPAY để API này hoạt đồng (ví dụ: http://localhost:1234/api/Vnpay/IpnAction)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CCSystem.API.Controllers.PaymentController.GetPaymentsByCustomerId(System.Int32)">
            <summary>
            Lấy danh sách thanh toán theo ID khách hàng.
            </summary>
            <param name="id">ID của khách hàng</param>
            <returns>Danh sách các khoản thanh toán</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.PaymentController.GetByBookingId(System.Int32)">
            <summary>
            Lấy thông tin thanh toán theo BookingId.
            </summary>
            <param name="id">ID của đơn đặt chỗ (Booking)</param>
            <returns>Thông tin thanh toán</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.PaymentController.Callback">
            <summary>
            Trả kết quả thanh toán về cho người dùng
            </summary>
            <returns></returns>
        </member>
        <member name="M:CCSystem.API.Controllers.PaymentController.UpdatePaymentWithBooking(System.Int32,CCSystem.Infrastructure.DTOs.Payments.PutPaymentWithBooking)">
            <summary>
            Update payment details and synchronize with the corresponding booking.
            </summary>
            <param name="paymentId">The ID of the payment to update.</param>
            <param name="request">The payment update request.</param>
            <returns>Updated payment and booking details.</returns>
            <response code="200">Payment updated successfully.</response>
            <response code="400">Invalid request data.</response>
            <response code="404">Payment or booking not found.</response>
            <response code="500">An internal server error occurred.</response>
        </member>
        <member name="M:CCSystem.API.Controllers.PromotionController.#ctor(CCSystem.BLL.Services.Interfaces.IPromotionService,FluentValidation.IValidator{CCSystem.Infrastructure.DTOs.Promotions.PostPromotionRequest},FluentValidation.IValidator{CCSystem.Infrastructure.DTOs.Promotions.PutPromotionRequest})">
            <summary>
            Controller for managing promotions.
            </summary>
            
        </member>
        <member name="M:CCSystem.API.Controllers.PromotionController.GetAllPromotions">
            <summary>
            Get all promotions.
            </summary>
            
        </member>
        <member name="M:CCSystem.API.Controllers.PromotionController.GetPromotionByCode(System.String)">
            <summary>
            Get a promotion by code.
            </summary>
            
        </member>
        <member name="M:CCSystem.API.Controllers.PromotionController.CreatePromotion(CCSystem.Infrastructure.DTOs.Promotions.PostPromotionRequest)">
            <summary>
            Create a promotion.
            </summary>  
            
        </member>
        <member name="M:CCSystem.API.Controllers.PromotionController.UpdatePromotion(System.String,CCSystem.Infrastructure.DTOs.Promotions.PutPromotionRequest)">
            <summary>
            Update a promotion.
            </summary>
            
        </member>
        <member name="M:CCSystem.API.Controllers.PromotionController.DeletePromotion(System.String)">
            <summary>
            Delete a promotion.
            </summary>
            
        </member>
        <member name="T:CCSystem.API.Controllers.ReviewController">
            <summary>
            Controller quản lý đánh giá (Review).
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.ReviewController.#ctor(CCSystem.BLL.Services.IReviewService,FluentValidation.IValidator{CCSystem.Infrastructure.DTOs.Review.ReviewRequest},AutoMapper.IMapper)">
            <summary>
            Khởi tạo ReviewController với các dịch vụ liên quan.
            </summary>
            <param name="reviewService">Dịch vụ quản lý đánh giá</param>
            <param name="validator">Trình xác thực đánh giá</param>
            <param name="mapper">Trình ánh xạ dữ liệu</param>
        </member>
        <member name="M:CCSystem.API.Controllers.ReviewController.GetAllReviews">
            <summary>
            Lấy danh sách tất cả đánh giá.
            </summary>
            <returns>Danh sách đánh giá</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.ReviewController.GetReviewsByCustomerId(System.Int32)">
            <summary>
            Lấy danh sách đánh giá dựa trên CustomerId.
            </summary>
            <param name="id">ID của khách hàng</param>
            <returns>Danh sách đánh giá nếu có, hoặc lỗi 404 nếu không tìm thấy</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.ReviewController.GetReviewById(System.Int32)">
            <summary>
            Lấy đánh giá theo ID.
            </summary>
            <param name="id">ID của đánh giá</param>
            <returns>Thông tin đánh giá nếu tồn tại</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.ReviewController.GetReviewsByDetailId(System.Int32)">
            <summary>
            Lấy danh sách đánh giá theo DetailId.
            </summary>
            <param name="id">ID của chi tiết đặt lịch</param>
            <returns>Danh sách đánh giá nếu có, hoặc lỗi 404 nếu không tìm thấy</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.ReviewController.CreateReview(CCSystem.Infrastructure.DTOs.Review.ReviewRequest)">
            <summary>
            Tạo một đánh giá mới.
            </summary>
            <param name="reviewRequest">Thông tin đánh giá</param>
            <returns>Trả về NoContent nếu thành công</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.ReviewController.UpdateReview(System.Int32,CCSystem.Infrastructure.DTOs.Review.ReviewRequest)">
            <summary>
            Cập nhật đánh giá theo ID.
            </summary>
            <param name="id">ID của đánh giá</param>
            <param name="reviewRequest">Dữ liệu đánh giá cập nhật</param>
            <returns>Thông báo cập nhật thành công</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.ReviewController.DeleteReview(System.Int32)">
            <summary>
            Xóa đánh giá theo ID.
            </summary>
            <param name="id">ID của đánh giá</param>
            <returns>Trả về NoContent nếu thành công</returns>
        </member>
        <member name="T:CCSystem.API.Controllers.ServiceDetailController">
            <summary>
            Controller for managing service details.
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.ServiceDetailController.#ctor(CCSystem.BLL.Services.Interfaces.IServiceDetailService,FluentValidation.IValidator{CCSystem.Infrastructure.DTOs.ServiceDetails.PostServiceDetailRequest},FluentValidation.IValidator{CCSystem.Infrastructure.DTOs.ServiceDetails.PutServiceDetailRequest})">
            <summary>
            Controller for managing service details.
            </summary>
        </member>
        <member name="M:CCSystem.API.Controllers.ServiceDetailController.GetServiceDetailById(System.Int32)">
            <summary>
            Get a service detail by ID.
            </summary>
            
            <param name="id">The Id of the service detail to retrieve.</param>
        </member>
        <member name="M:CCSystem.API.Controllers.ServiceDetailController.CreateServiceDetail(CCSystem.Infrastructure.DTOs.ServiceDetails.PostServiceDetailRequest)">
             <summary>
             Create a service detail.
             </summary>
            
        </member>
        <member name="M:CCSystem.API.Controllers.ServiceDetailController.UpdateServiceDetail(System.Int32,CCSystem.Infrastructure.DTOs.ServiceDetails.PutServiceDetailRequest)">
            <summary>
            Update a service detail.
            </summary>
            
        </member>
        <member name="M:CCSystem.API.Controllers.ServiceDetailController.DeleteServiceDetail(System.Int32)">
            <summary>
            Delete a service detail.
            </summary>
            
        </member>
        <member name="M:CCSystem.API.Controllers.ServicesController.PostCreateServiceAsync(CCSystem.Infrastructure.DTOs.Services.PostServiceRequest)">
            <summary>
            Create new service.
            </summary>
            <param name="postServiceRequest">
            An object that includes information about the service.
            </param>
            <returns>
            A success message about creating new service.
            </returns>
            <remarks>
                Sample request:
                
                    POST
                    CategoryId = 1
                    ServiceName = MyService
                    Description = Service description
                    Image = [Image file]
                    Price = 100.0
                    Duration = 60
                    IsActive = true
            </remarks>
            <response code="200">Created new service successfully.</response>
            <response code="400">Some error about request data and business logic.</response>
            <response code="500">Some error about the system.</response>
            <exception cref="T:CCSystem.BLL.Exceptions.BadRequestException">Throw error about request data and business logic.</exception>
            <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Throw error when related data are not found.</exception>
            <exception cref="T:System.Exception">Throw error about the system.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.ServicesController.UpdateService(System.Int32,CCSystem.Infrastructure.DTOs.Services.PostServiceRequest)">
            <summary>
            Cập nhật thông tin dịch vụ dựa trên ID.
            </summary>
            <param name="id">ID của dịch vụ cần cập nhật.</param>
            <param name="request">Dữ liệu mới của dịch vụ.</param>
            <returns>Trả về kết quả thành công hoặc lỗi.</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.ServicesController.DeleteService(System.Int32)">
            <summary>
            Vô hiệu hóa dịch vụ bằng cách đặt IsActive = false.
            </summary>
            <param name="id">ID của dịch vụ cần vô hiệu hóa.</param>
            <returns>Trả về kết quả thành công hoặc lỗi.</returns>
        </member>
        <member name="M:CCSystem.API.Controllers.ServicesController.GetSearchServiceAsync(CCSystem.Infrastructure.DTOs.Services.SearchServiceRequest)">
             <summary>
             Search services based on given criteria.
             </summary>
             <param name="searchServiceRequest">
             An object containing search criteria for services.
             </param>
             <returns>
             A list of services matching the search criteria.
             </returns>
             <remarks>
                 Sample request:
            
                     GET
                     CategoryName = MyCategory
                     ServiceName = MyService
                     Description = Service description
                     Price = 100.0
                     Duration = 60
                     IsActive = true
             </remarks>
             <response code="200">Return a list of services matching the criteria.</response>
             <response code="400">Invalid search criteria or business logic error.</response>
             <response code="500">Unexpected system error.</response>
             <exception cref="T:CCSystem.BLL.Exceptions.BadRequestException">Throw error if search criteria are invalid.</exception>
             <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Throw error if related data are not found.</exception>
             <exception cref="T:System.Exception">Throw error for unexpected system issues.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.ServicesController.GetListServicesAsync">
            <summary>
            Retrieves the list of services.
            </summary>
            <returns>
            A list of services.
            </returns>
            <response code="200">Services retrieved successfully.</response>
            <response code="500">An error occurred in the system.</response>
            <exception cref="T:System.Exception">Throws a system exception if an error occurs.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.ServicesController.GetServiceByIdAsync(CCSystem.Infrastructure.DTOs.Services.ServiceIdRequest)">
            <summary>
            Retrieves detailed information of a service by its Id.
            </summary>
            <param name="id">The Id of the service to retrieve.</param>
            <returns>
            Detailed information of the service.
            </returns>
            <response code="200">Service information retrieved successfully.</response>
            <response code="404">No service found with the provided Id.</response>
            <response code="500">An error occurred in the system.</response>
            <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Thrown when no service exists with the provided Id.</exception>
            <exception cref="T:System.Exception">Throws a system exception if an error occurs.</exception>
        </member>
        <member name="M:CCSystem.API.Controllers.ServicesController.GetServicesByCategoryIdAsync(CCSystem.Infrastructure.DTOs.Category.CategoryIdRequest)">
             <summary>
             Retrieves a list of services based on the specified category id.
             </summary>
             <param name="categoryId">The identifier of the category.</param>
             <returns>A list of services associated with the given category.</returns>
             <remarks>
             Sample request:
            
                 GET /api/v1/services/category/1
             </remarks>
             <response code="200">Returns a list of services for the specified category.</response>
             <response code="400">Invalid category id or business logic error.</response>
             <response code="500">Unexpected system error.</response>
             <exception cref="T:CCSystem.BLL.Exceptions.NotFoundException">Thrown if the specified category does not exist.</exception>
        </member>
        <member name="M:ReportsController.#ctor(CCSystem.BLL.Services.IReportService)">
            <summary>
            Constructor để inject service quản lý báo cáo.
            </summary>
            <param name="reportService">Service báo cáo</param>
        </member>
        <member name="M:ReportsController.CreateReportAsync(CCSystem.Infrastructure.DTOs.Report.ReportRequest)">
            <summary>
            Tạo một báo cáo mới.
            </summary>
            <param name="request">Thông tin báo cáo</param>
        </member>
        <member name="M:ReportsController.UpdateReport(System.Int32,CCSystem.Infrastructure.DTOs.Report.ReportRequest)">
            <summary>
            Cập nhật báo cáo theo ID.
            </summary>
            <param name="id">ID báo cáo</param>
            <param name="request">Thông tin cập nhật</param>
        </member>
        <member name="M:ReportsController.DeleteReport(System.Int32,System.String)">
            <summary>
            Cập nhật trạng thái của báo cáo thay vì xóa.
            </summary>
            <param name="id">ID của báo cáo cần cập nhật.</param>
            <param name="newStatus">Trạng thái mới của báo cáo.</param>
            <returns>Trả về kết quả của quá trình cập nhật.</returns>
        </member>
        <member name="M:ReportsController.GetReportById(System.Int32)">
            <summary>
            Lấy thông tin báo cáo theo ID.
            </summary>
            <param name="id">ID báo cáo</param>
            <returns>Thông tin báo cáo nếu tồn tại</returns>
        </member>
        <member name="M:ReportsController.GetAllReports">
            <summary>
            Lấy danh sách tất cả báo cáo.
            </summary>
            <returns>Danh sách báo cáo</returns>
        </member>
        <member name="M:ReportsController.GetReportsByHousekeeperId(System.Int32)">
            <summary>
            Lấy danh sách báo cáo theo HousekeeperId.
            </summary>
            <param name="id">ID của Housekeeper</param>
            <returns>Danh sách báo cáo nếu có, hoặc lỗi 404 nếu không tìm thấy</returns>
        </member>
        <member name="M:ReportsController.GetByAssignId(System.Int32)">
            <summary>
            Lấy danh sách báo cáo theo AssignId.
            </summary>
            <param name="id">ID của Assign</param>
            <returns>Danh sách báo cáo nếu có, hoặc lỗi 404 nếu không tìm thấy</returns>
        </member>
    </members>
</doc>
