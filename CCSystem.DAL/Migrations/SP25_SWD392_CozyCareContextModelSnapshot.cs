// <auto-generated />
using System;
using CCSystem.DAL.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCSystem.DAL.Migrations
{
    [DbContext(typeof(SP25_SWD392_CozyCareContext))]
    partial class SP25_SWD392_CozyCareContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CCSystem.DAL.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("accountId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("avatar");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<int?>("Experience")
                        .HasColumnType("int")
                        .HasColumnName("experience");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fullName");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gender");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<double?>("Rating")
                        .HasColumnType("float")
                        .HasColumnName("rating");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedDate");

                    b.HasKey("AccountId")
                        .HasName("PK__Accounts__F267251E7190B3F8");

                    b.HasIndex(new[] { "Email" }, "UQ__Accounts__AB6E6164FFDE7117")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bookingId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bookingDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bookingStatus");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("notes");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("paymentMethod");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("paymentStatus");

                    b.Property<string>("PromotionCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("promotionCode");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalAmount");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__C6D03BCD8FCCFE43");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PromotionCode");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.BookingDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("detailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"));

                    b.Property<string>("BookdetailStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bookdetailStatus");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("bookingId");

                    b.Property<bool?>("IsAssign")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isAssign");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateOnly>("ScheduleDate")
                        .HasColumnType("date")
                        .HasColumnName("scheduleDate");

                    b.Property<TimeOnly>("ScheduleTime")
                        .HasColumnType("time")
                        .HasColumnName("scheduleTime");

                    b.Property<int?>("ServiceDetailId")
                        .HasColumnType("int")
                        .HasColumnName("serviceDetailId");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("unitPrice");

                    b.HasKey("DetailId")
                        .HasName("PK__BookingD__830778592CFC65D8");

                    b.HasIndex("BookingId");

                    b.HasIndex("ServiceDetailId");

                    b.HasIndex("ServiceId");

                    b.ToTable("BookingDetails");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("categoryName");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedDate");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__23CAF1D80F210779");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("paymentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("bookingId");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("paymentDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("paymentMethod");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedDate");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__A0D9EFC6454F04A1");

                    b.HasIndex("BookingId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Promotion", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("discountAmount");

                    b.Property<double?>("DiscountPercent")
                        .HasColumnType("float")
                        .HasColumnName("discountPercent");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("endDate");

                    b.Property<decimal?>("MaxDiscountAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("maxDiscountAmount");

                    b.Property<decimal?>("MinOrderAmount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("minOrderAmount");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("startDate");

                    b.HasKey("Code")
                        .HasName("PK__Promotio__357D4CF873D84042");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Report", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recordId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<int>("AssignId")
                        .HasColumnType("int")
                        .HasColumnName("assignId");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("endTime");

                    b.Property<int>("HousekeeperId")
                        .HasColumnType("int")
                        .HasColumnName("housekeeperId");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("startTime");

                    b.Property<string>("TaskStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("taskStatus");

                    b.Property<double>("TotalHours")
                        .HasColumnType("float")
                        .HasColumnName("totalHours");

                    b.Property<DateOnly>("WorkDate")
                        .HasColumnType("date")
                        .HasColumnName("workDate");

                    b.HasKey("RecordId")
                        .HasName("PK__Reports__D825195EFB393F9D");

                    b.HasIndex("AssignId");

                    b.HasIndex("HousekeeperId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reviewId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("comment");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<int>("DetailId")
                        .HasColumnType("int")
                        .HasColumnName("detailId");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("reviewDate")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__2ECD6E040E6613F9");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DetailId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.ScheduleAssignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("assignmentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<DateOnly>("AssignDate")
                        .HasColumnType("date")
                        .HasColumnName("assignDate");

                    b.Property<int>("DetailId")
                        .HasColumnType("int")
                        .HasColumnName("detailId");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("endTime");

                    b.Property<int>("HousekeeperId")
                        .HasColumnType("int")
                        .HasColumnName("housekeeperId");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("notes");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("startTime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("AssignmentId")
                        .HasName("PK__Schedule__52C218205FA00C0B");

                    b.HasIndex("DetailId");

                    b.HasIndex("HousekeeperId");

                    b.ToTable("ScheduleAssignments");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createdDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActive");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("serviceName");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updatedDate");

                    b.HasKey("ServiceId")
                        .HasName("PK__Services__455070DF445A6B42");

                    b.HasIndex("CategoryId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.ServiceDetail", b =>
                {
                    b.Property<int>("ServiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("serviceDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceDetailId"));

                    b.Property<decimal?>("BasePrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("basePrice");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("description");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("OptionName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("optionName");

                    b.Property<string>("OptionType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("optionType");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.HasKey("ServiceDetailId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceDetails");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Booking", b =>
                {
                    b.HasOne("CCSystem.DAL.Models.Account", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Bookings_Accounts");

                    b.HasOne("CCSystem.DAL.Models.Promotion", "PromotionCodeNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("PromotionCode")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Bookings_Promotions");

                    b.Navigation("Customer");

                    b.Navigation("PromotionCodeNavigation");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.BookingDetail", b =>
                {
                    b.HasOne("CCSystem.DAL.Models.Booking", "Booking")
                        .WithMany("BookingDetails")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookingDetails_Bookings");

                    b.HasOne("CCSystem.DAL.Models.ServiceDetail", "ServiceDetail")
                        .WithMany("BookingDetails")
                        .HasForeignKey("ServiceDetailId")
                        .HasConstraintName("FK_BookingDetails_ServiceDetails");

                    b.HasOne("CCSystem.DAL.Models.Service", "Service")
                        .WithMany("BookingDetails")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BookingDetails_Services");

                    b.Navigation("Booking");

                    b.Navigation("Service");

                    b.Navigation("ServiceDetail");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Payment", b =>
                {
                    b.HasOne("CCSystem.DAL.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Payments_Bookings");

                    b.HasOne("CCSystem.DAL.Models.Account", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Payments_Accounts");

                    b.Navigation("Booking");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Report", b =>
                {
                    b.HasOne("CCSystem.DAL.Models.ScheduleAssignment", "Assign")
                        .WithMany("Reports")
                        .HasForeignKey("AssignId")
                        .IsRequired()
                        .HasConstraintName("FK_Reports_ScheduleAssignments");

                    b.HasOne("CCSystem.DAL.Models.Account", "Housekeeper")
                        .WithMany("Reports")
                        .HasForeignKey("HousekeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Reports_Accounts");

                    b.Navigation("Assign");

                    b.Navigation("Housekeeper");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Review", b =>
                {
                    b.HasOne("CCSystem.DAL.Models.Account", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Reviews_Accounts");

                    b.HasOne("CCSystem.DAL.Models.BookingDetail", "Detail")
                        .WithMany("Reviews")
                        .HasForeignKey("DetailId")
                        .IsRequired()
                        .HasConstraintName("FK_Reviews_BookingDetails");

                    b.Navigation("Customer");

                    b.Navigation("Detail");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.ScheduleAssignment", b =>
                {
                    b.HasOne("CCSystem.DAL.Models.BookingDetail", "Detail")
                        .WithMany("ScheduleAssignments")
                        .HasForeignKey("DetailId")
                        .IsRequired()
                        .HasConstraintName("FK_ScheduleAssignments_BookingDetails");

                    b.HasOne("CCSystem.DAL.Models.Account", "Housekeeper")
                        .WithMany("ScheduleAssignments")
                        .HasForeignKey("HousekeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ScheduleAssignments_Accounts");

                    b.Navigation("Detail");

                    b.Navigation("Housekeeper");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Service", b =>
                {
                    b.HasOne("CCSystem.DAL.Models.Category", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Services_Categories");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.ServiceDetail", b =>
                {
                    b.HasOne("CCSystem.DAL.Models.Service", "Service")
                        .WithMany("ServiceDetails")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ServiceDetails_Services");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Account", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Payments");

                    b.Navigation("Reports");

                    b.Navigation("Reviews");

                    b.Navigation("ScheduleAssignments");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Booking", b =>
                {
                    b.Navigation("BookingDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.BookingDetail", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("ScheduleAssignments");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Category", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Promotion", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.ScheduleAssignment", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.Service", b =>
                {
                    b.Navigation("BookingDetails");

                    b.Navigation("ServiceDetails");
                });

            modelBuilder.Entity("CCSystem.DAL.Models.ServiceDetail", b =>
                {
                    b.Navigation("BookingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
